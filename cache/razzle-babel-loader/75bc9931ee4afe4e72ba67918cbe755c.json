{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/t.cherednichenko/tatinacher/sunny-day-razzle/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toArray from \"/Users/t.cherednichenko/tatinacher/sunny-day-razzle/node_modules/@babel/runtime/helpers/esm/toArray\";\n\nvar _jsxFileName = \"/Users/t.cherednichenko/tatinacher/sunny-day-razzle/src/pages/city-forecast-page.jsx\",\n    _this = this,\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7;\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCityForecast } from \"../features/city\";\nimport { flags, units } from \"../lib/constants\";\nexport var CityForecastPage = function CityForecastPage() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  console.log(\"123\", id);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.cityForecast;\n  }),\n      city = _useSelector.city,\n      list = _useSelector.list;\n\n  React.useEffect(function () {\n    if (!city || id && name.toLowerCase() !== id) {\n      dispatch(fetchCityForecast(id));\n    }\n  }, [id]);\n  if (!city) return null;\n  var name = city.name,\n      country = city.country,\n      population = city.population;\n  if (!name || name.toLowerCase() !== id) return null;\n\n  var _list = _toArray(list),\n      temperature_now = _list[0],\n      other = _list.slice(1);\n\n  var closeTemp = list.slice(0, 5);\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, name, \" \", flags[country])), __jsx(TimeTemperature, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, closeTemp.map(function (datetime) {\n    var _datetime$main;\n\n    return __jsx(TemperatureBlock, {\n      key: datetime.dt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(TemperatureHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, datetime === null || datetime === void 0 ? void 0 : (_datetime$main = datetime.main) === null || _datetime$main === void 0 ? void 0 : _datetime$main.temp, units.metric.symbol, __jsx(\"img\", {\n      width: \"64px\",\n      src: \"\".concat(process.env.RAZZLE_PUBLIC_URL, \"/assets/icons/\").concat(datetime.weather[0].icon, \"@2x.png\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    })), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"Wind \", datetime.wind.speed));\n  }))));\n};\nexport var TimeTemperature = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n\"])));\nexport var TemperatureBlock = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  box-shadow: 2px 3px 5px 0px rgb(0 0 0 / 12%);\\n  padding: 0 25px;\\n  border-radius: 3px;\\n  display: flex;\\n  flex-direction: column;\\n  margin: 20px 20px 0 0;\\n  width: 200px;\\n  height: 200px;\\n\"])));\nexport var Container = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  padding: 30px;\\n\"])));\nexport var Card = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  padding: 10px;\\n  margin: 10px;\\n  max-width: 300px;\\n\"])));\nexport var CardBlock = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr 1fr;\\n\"])));\nexport var Header = styled.h1(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n\"])));\nexport var TemperatureHeader = styled.h1(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  margin: 0;\\n\"])));","map":{"version":3,"sources":["/Users/t.cherednichenko/tatinacher/sunny-day-razzle/src/pages/city-forecast-page.jsx"],"names":["React","useSelector","useDispatch","styled","useParams","fetchCityForecast","flags","units","CityForecastPage","id","console","log","dispatch","state","cityForecast","city","list","useEffect","name","toLowerCase","country","population","temperature_now","other","closeTemp","slice","map","datetime","dt","main","temp","metric","symbol","process","env","RAZZLE_PUBLIC_URL","weather","icon","wind","speed","TimeTemperature","div","TemperatureBlock","Container","Card","CardBlock","Header","h1","TemperatureHeader"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\n\nimport { fetchCityForecast } from \"../features/city\";\nimport { flags, units } from \"../lib/constants\";\n\nexport const CityForecastPage = () => {\n  const { id } = useParams();\n  console.log(\"123\", id);\n\n  const dispatch = useDispatch();\n  const { city, list } = useSelector((state) => state.cityForecast);\n\n  React.useEffect(() => {\n    if (!city || (id && name.toLowerCase() !== id)) {\n      dispatch(fetchCityForecast(id));\n    }\n  }, [id]);\n\n  if (!city) return null;\n\n  const { name, country, population } = city;\n\n  if (!name || name.toLowerCase() !== id) return null;\n\n  const [temperature_now, ...other] = list;\n\n  const closeTemp = list.slice(0, 5);\n\n  return (\n    <Container>\n      <div>\n        <div>\n          <Header>\n            {name} {flags[country]}\n          </Header>\n          {/* <p>Population {population}</p> */}\n        </div>\n        <TimeTemperature>\n          {closeTemp.map((datetime) => (\n            <TemperatureBlock key={datetime.dt}>\n              <TemperatureHeader>\n                {datetime?.main?.temp}\n                {units.metric.symbol}\n                <img\n                  width=\"64px\"\n                  src={`${process.env.RAZZLE_PUBLIC_URL}/assets/icons/${datetime.weather[0].icon}@2x.png`}\n                />\n              </TemperatureHeader>\n              <p>Wind {datetime.wind.speed}</p>\n              {/* <h2>{dayjs.unix(datetime.dt).format(\"HH:mm\")}</h2> */}\n            </TemperatureBlock>\n          ))}\n        </TimeTemperature>\n      </div>\n    </Container>\n  );\n};\n\nexport const TimeTemperature = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const TemperatureBlock = styled.div`\n  box-shadow: 2px 3px 5px 0px rgb(0 0 0 / 12%);\n  padding: 0 25px;\n  border-radius: 3px;\n  display: flex;\n  flex-direction: column;\n  margin: 20px 20px 0 0;\n  width: 200px;\n  height: 200px;\n`;\n\nexport const Container = styled.div`\n  padding: 30px;\n`;\n\nexport const Card = styled.div`\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 10px;\n  max-width: 300px;\n`;\n\nexport const CardBlock = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n`;\n\nexport const Header = styled.h1`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TemperatureHeader = styled.h1`\n  display: flex;\n  align-items: center;\n  margin: 0;\n`;\n"]},"metadata":{},"sourceType":"module"}