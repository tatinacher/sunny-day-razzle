{"ast":null,"code":"import _defineProperty from \"/Users/t.cherednichenko/tatinacher/sunny-day-razzle/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/t.cherednichenko/tatinacher/sunny-day-razzle/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"/Users/t.cherednichenko/tatinacher/sunny-day-razzle/node_modules/@babel/runtime/regenerator\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { url } from \"../lib/initial-data\";\nexport var fetchCity = createAsyncThunk(\"cityWeather/fetchCity\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(city) {\n    var response, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(url(city));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport var cityWeather = createSlice({\n  name: \"cityWeather\",\n  initialState: {},\n  reducers: {\n    cityLoaded: function cityLoaded(_, action) {\n      return action.payload;\n    }\n  },\n  extraReducers: _defineProperty({}, fetchCity.fulfilled, function (_, action) {\n    return action.payload;\n  })\n});\nvar cityLoaded = cityWeather.actions.cityLoaded;\nexport { cityLoaded };\nexport var cityReducer = cityWeather.reducer;","map":{"version":3,"sources":["/Users/t.cherednichenko/tatinacher/sunny-day-razzle/src/features/city.js"],"names":["createAsyncThunk","createSlice","url","fetchCity","city","fetch","response","json","result","cityWeather","name","initialState","reducers","cityLoaded","_","action","payload","extraReducers","fulfilled","actions","cityReducer","reducer"],"mappings":";;;AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,GAAT,QAAoB,qBAApB;AAEA,OAAO,IAAMC,SAAS,GAAGH,gBAAgB,CACvC,uBADuC;AAAA,sEAEvC,iBAAOI,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBC,KAAK,CAACH,GAAG,CAACE,IAAD,CAAJ,CAD9B;;AAAA;AACQE,YAAAA,QADR;AAAA;AAAA,mBAEuBA,QAAQ,CAACC,IAAT,EAFvB;;AAAA;AAEQC,YAAAA,MAFR;AAAA,6CAGSA,MAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFuC;;AAAA;AAAA;AAAA;AAAA,IAAlC;AASP,OAAO,IAAMC,WAAW,GAAGR,WAAW,CAAC;AACrCS,EAAAA,IAAI,EAAE,aAD+B;AAErCC,EAAAA,YAAY,EAAE,EAFuB;AAGrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,oBAACC,CAAD,EAAIC,MAAJ;AAAA,aAAeA,MAAM,CAACC,OAAtB;AAAA;AADJ,GAH2B;AAMrCC,EAAAA,aAAa,sBACVd,SAAS,CAACe,SADA,EACY,UAACJ,CAAD,EAAIC,MAAJ;AAAA,WAAeA,MAAM,CAACC,OAAtB;AAAA,GADZ;AANwB,CAAD,CAA/B;AAWA,IAAQH,UAAR,GAAuBJ,WAAW,CAACU,OAAnC,CAAQN,UAAR;;AAEP,OAAO,IAAMO,WAAW,GAAGX,WAAW,CAACY,OAAhC","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { url } from \"../lib/initial-data\";\n\nexport const fetchCity = createAsyncThunk(\n  \"cityWeather/fetchCity\",\n  async (city) => {\n    const response = await fetch(url(city));\n    const result = await response.json();\n    return result;\n  }\n);\n\nexport const cityWeather = createSlice({\n  name: \"cityWeather\",\n  initialState: {},\n  reducers: {\n    cityLoaded: (_, action) => action.payload,\n  },\n  extraReducers: {\n    [fetchCity.fulfilled]: (_, action) => action.payload,\n  },\n});\n\nexport const { cityLoaded } = cityWeather.actions;\n\nexport const cityReducer = cityWeather.reducer;\n"]},"metadata":{},"sourceType":"module"}