{"ast":null,"code":"var _jsxFileName = \"/Users/t.cherednichenko/tatinacher/razzle-example/src/pages/city-forecast-page.jsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\"; // import dayjs from \"dayjs\";\n\nimport { fetchCity } from \"../features/city\";\nimport { flags, units } from \"../lib/constants\";\nexport const CityPage = () => {\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    city,\n    list\n  } = useSelector(state => state.city);\n  React.useEffect(() => {\n    if (!city || id && name.toLowerCase() !== id) {\n      dispatch(fetchCity(id));\n    }\n  }, [id]);\n  if (!city) return null;\n  const {\n    name,\n    country,\n    population\n  } = city;\n  if (!name || name.toLowerCase() !== id) return null;\n  const [temperature_now, ...other] = list;\n  const closeTemp = list.slice(0, 5);\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, name, \" \", flags[country])), __jsx(TimeTemperature, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, closeTemp.map(datetime => {\n    var _datetime$main;\n\n    return __jsx(TemperatureBlock, {\n      key: datetime.dt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(TemperatureHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, datetime === null || datetime === void 0 ? void 0 : (_datetime$main = datetime.main) === null || _datetime$main === void 0 ? void 0 : _datetime$main.temp, units.metric.symbol, __jsx(\"img\", {\n      width: \"64px\",\n      src: `${process.env.RAZZLE_PUBLIC_URL}/assets/icons/${datetime.weather[0].icon}@2x.png`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    })), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"Wind \", datetime.wind.speed));\n  }))));\n};\nexport const TimeTemperature = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\nexport const TemperatureBlock = styled.div`\n  box-shadow: 2px 3px 5px 0px rgb(0 0 0 / 12%);\n  padding: 0 25px;\n  border-radius: 3px;\n  display: flex;\n  flex-direction: column;\n  margin: 20px 20px 0 0;\n  width: 200px;\n  height: 200px;\n`;\nexport const Container = styled.div`\n  padding: 30px;\n`;\nexport const Card = styled.div`\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 10px;\n  max-width: 300px;\n`;\nexport const CardBlock = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n`;\nexport const Header = styled.h1`\n  display: flex;\n  align-items: center;\n`;\nexport const TemperatureHeader = styled.h1`\n  display: flex;\n  align-items: center;\n  margin: 0;\n`;","map":{"version":3,"sources":["/Users/t.cherednichenko/tatinacher/razzle-example/src/pages/city-forecast-page.jsx"],"names":["React","useSelector","useDispatch","styled","useParams","fetchCity","flags","units","CityPage","id","dispatch","city","list","state","useEffect","name","toLowerCase","country","population","temperature_now","other","closeTemp","slice","map","datetime","dt","main","temp","metric","symbol","process","env","RAZZLE_PUBLIC_URL","weather","icon","wind","speed","TimeTemperature","div","TemperatureBlock","Container","Card","CardBlock","Header","h1","TemperatureHeader"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,kBAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AAEA,QAAMM,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACF,IAAlB,CAAlC;AAEAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACH,IAAD,IAAUF,EAAE,IAAIM,IAAI,CAACC,WAAL,OAAuBP,EAA3C,EAAgD;AAC9CC,MAAAA,QAAQ,CAACL,SAAS,CAACI,EAAD,CAAV,CAAR;AACD;AACF,GAJD,EAIG,CAACA,EAAD,CAJH;AAMA,MAAI,CAACE,IAAL,EAAW,OAAO,IAAP;AAEX,QAAM;AAAEI,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAAgCP,IAAtC;AAEA,MAAI,CAACI,IAAD,IAASA,IAAI,CAACC,WAAL,OAAuBP,EAApC,EAAwC,OAAO,IAAP;AAExC,QAAM,CAACU,eAAD,EAAkB,GAAGC,KAArB,IAA8BR,IAApC;AAEA,QAAMS,SAAS,GAAGT,IAAI,CAACU,KAAL,CAAW,CAAX,EAAc,CAAd,CAAlB;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IADH,OACUT,KAAK,CAACW,OAAD,CADf,CADF,CADF,EAOE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,SAAS,CAACE,GAAV,CAAeC,QAAD;AAAA;;AAAA,WACb,MAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QADH,aACGA,QADH,yCACGA,QAAQ,CAAEE,IADb,mDACG,eAAgBC,IADnB,EAEGpB,KAAK,CAACqB,MAAN,CAAaC,MAFhB,EAGE;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAAgBR,QAAQ,CAACS,OAAT,CAAiB,CAAjB,EAAoBC,IAAK,SAFjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASV,QAAQ,CAACW,IAAT,CAAcC,KAAvB,CATF,CADa;AAAA,GAAd,CADH,CAPF,CADF,CADF;AA4BD,CAlDM;AAoDP,OAAO,MAAMC,eAAe,GAAGlC,MAAM,CAACmC,GAAI;AAC1C;AACA;AACA,CAHO;AAKP,OAAO,MAAMC,gBAAgB,GAAGpC,MAAM,CAACmC,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAWP,OAAO,MAAME,SAAS,GAAGrC,MAAM,CAACmC,GAAI;AACpC;AACA,CAFO;AAIP,OAAO,MAAMG,IAAI,GAAGtC,MAAM,CAACmC,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANO;AAQP,OAAO,MAAMI,SAAS,GAAGvC,MAAM,CAACmC,GAAI;AACpC;AACA;AACA,CAHO;AAKP,OAAO,MAAMK,MAAM,GAAGxC,MAAM,CAACyC,EAAG;AAChC;AACA;AACA,CAHO;AAKP,OAAO,MAAMC,iBAAiB,GAAG1C,MAAM,CAACyC,EAAG;AAC3C;AACA;AACA;AACA,CAJO","sourcesContent":["import * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\n// import dayjs from \"dayjs\";\n\nimport { fetchCity } from \"../features/city\";\nimport { flags, units } from \"../lib/constants\";\n\nexport const CityPage = () => {\n  const { id } = useParams();\n\n  const dispatch = useDispatch();\n  const { city, list } = useSelector((state) => state.city);\n\n  React.useEffect(() => {\n    if (!city || (id && name.toLowerCase() !== id)) {\n      dispatch(fetchCity(id));\n    }\n  }, [id]);\n\n  if (!city) return null;\n\n  const { name, country, population } = city;\n\n  if (!name || name.toLowerCase() !== id) return null;\n\n  const [temperature_now, ...other] = list;\n\n  const closeTemp = list.slice(0, 5);\n\n  return (\n    <Container>\n      <div>\n        <div>\n          <Header>\n            {name} {flags[country]}\n          </Header>\n          {/* <p>Population {population}</p> */}\n        </div>\n        <TimeTemperature>\n          {closeTemp.map((datetime) => (\n            <TemperatureBlock key={datetime.dt}>\n              <TemperatureHeader>\n                {datetime?.main?.temp}\n                {units.metric.symbol}\n                <img\n                  width=\"64px\"\n                  src={`${process.env.RAZZLE_PUBLIC_URL}/assets/icons/${datetime.weather[0].icon}@2x.png`}\n                />\n              </TemperatureHeader>\n              <p>Wind {datetime.wind.speed}</p>\n              {/* <h2>{dayjs.unix(datetime.dt).format(\"HH:mm\")}</h2> */}\n            </TemperatureBlock>\n          ))}\n        </TimeTemperature>\n      </div>\n    </Container>\n  );\n};\n\nexport const TimeTemperature = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const TemperatureBlock = styled.div`\n  box-shadow: 2px 3px 5px 0px rgb(0 0 0 / 12%);\n  padding: 0 25px;\n  border-radius: 3px;\n  display: flex;\n  flex-direction: column;\n  margin: 20px 20px 0 0;\n  width: 200px;\n  height: 200px;\n`;\n\nexport const Container = styled.div`\n  padding: 30px;\n`;\n\nexport const Card = styled.div`\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 10px;\n  max-width: 300px;\n`;\n\nexport const CardBlock = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n`;\n\nexport const Header = styled.h1`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TemperatureHeader = styled.h1`\n  display: flex;\n  align-items: center;\n  margin: 0;\n`;\n"]},"metadata":{},"sourceType":"module"}