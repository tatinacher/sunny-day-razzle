{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { urlWeather } from \"../lib/initial-data\";\nexport const fetch = path => async city => {\n  const response = await fetch(path(city));\n  const result = await response.json();\n  return result;\n};\nexport const fetchCityWeather = createAsyncThunk(\"cityWeather/fetchCityWeather\", fetch(urlWeather));\nexport const cityWeather = createSlice({\n  name: \"cityWeather\",\n  initialState: {},\n  reducers: {\n    cityLoaded: (_, action) => action.payload\n  },\n  extraReducers: {\n    [fetchCityWeather.fulfilled]: (_, action) => action.payload\n  }\n});\nexport const {\n  cityLoaded\n} = cityWeather.actions;\nexport const cityReducer = cityWeather.reducer;","map":{"version":3,"sources":["/Users/t.cherednichenko/tatinacher/sunny-day-razzle/src/features/city.js"],"names":["createAsyncThunk","createSlice","urlWeather","fetch","path","city","response","result","json","fetchCityWeather","cityWeather","name","initialState","reducers","cityLoaded","_","action","payload","extraReducers","fulfilled","actions","cityReducer","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,UAAT,QAAwC,qBAAxC;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU,MAAOC,IAAP,IAAgB;AAC7C,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACC,IAAI,CAACC,IAAD,CAAL,CAA5B;AACA,QAAME,MAAM,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAArB;AACA,SAAOD,MAAP;AACD,CAJM;AAMP,OAAO,MAAME,gBAAgB,GAAGT,gBAAgB,CAC9C,8BAD8C,EAE9CG,KAAK,CAACD,UAAD,CAFyC,CAAzC;AAKP,OAAO,MAAMQ,WAAW,GAAGT,WAAW,CAAC;AACrCU,EAAAA,IAAI,EAAE,aAD+B;AAErCC,EAAAA,YAAY,EAAE,EAFuB;AAGrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,CAAD,EAAIC,MAAJ,KAAeA,MAAM,CAACC;AAD1B,GAH2B;AAMrCC,EAAAA,aAAa,EAAE;AACb,KAACT,gBAAgB,CAACU,SAAlB,GAA8B,CAACJ,CAAD,EAAIC,MAAJ,KAAeA,MAAM,CAACC;AADvC;AANsB,CAAD,CAA/B;AAWP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAiBJ,WAAW,CAACU,OAAnC;AAEP,OAAO,MAAMC,WAAW,GAAGX,WAAW,CAACY,OAAhC","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { urlWeather, urlForecast } from \"../lib/initial-data\";\n\nexport const fetch = (path) => async (city) => {\n  const response = await fetch(path(city));\n  const result = await response.json();\n  return result;\n};\n\nexport const fetchCityWeather = createAsyncThunk(\n  \"cityWeather/fetchCityWeather\",\n  fetch(urlWeather)\n);\n\nexport const cityWeather = createSlice({\n  name: \"cityWeather\",\n  initialState: {},\n  reducers: {\n    cityLoaded: (_, action) => action.payload,\n  },\n  extraReducers: {\n    [fetchCityWeather.fulfilled]: (_, action) => action.payload,\n  },\n});\n\nexport const { cityLoaded } = cityWeather.actions;\n\nexport const cityReducer = cityWeather.reducer;\n"]},"metadata":{},"sourceType":"module"}