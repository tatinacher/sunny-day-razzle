{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { url } from \"../lib/initial-data\";\nexport const fetchCity = createAsyncThunk(\"city/fetchCity\", async city => {\n  const response = await fetch(url(city));\n  const result = await response.json();\n  return result;\n});\nexport const city = createSlice({\n  name: \"city\",\n  initialState: {},\n  reducers: {\n    cityLoaded: (_, action) => action.payload\n  },\n  extraReducers: {\n    [fetchCity.fulfilled]: (_, action) => action.payload\n  }\n});\nexport const {\n  cityLoaded\n} = city.actions;\nexport const cityReducer = city.reducer;","map":{"version":3,"sources":["/Users/t.cherednichenko/tatinacher/sunny-day-razzle/src/features/city.js"],"names":["createAsyncThunk","createSlice","url","fetchCity","city","response","fetch","result","json","name","initialState","reducers","cityLoaded","_","action","payload","extraReducers","fulfilled","actions","cityReducer","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,GAAT,QAAoB,qBAApB;AAEA,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CAAC,gBAAD,EAAmB,MAAOI,IAAP,IAAgB;AAC1E,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAACE,IAAD,CAAJ,CAA5B;AACA,QAAMG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,SAAOD,MAAP;AACD,CAJwC,CAAlC;AAMP,OAAO,MAAMH,IAAI,GAAGH,WAAW,CAAC;AAC9BQ,EAAAA,IAAI,EAAE,MADwB;AAE9BC,EAAAA,YAAY,EAAE,EAFgB;AAG9BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,CAAD,EAAIC,MAAJ,KAAeA,MAAM,CAACC;AAD1B,GAHoB;AAM9BC,EAAAA,aAAa,EAAE;AACb,KAACb,SAAS,CAACc,SAAX,GAAuB,CAACJ,CAAD,EAAIC,MAAJ,KAAeA,MAAM,CAACC;AADhC;AANe,CAAD,CAAxB;AAWP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAiBR,IAAI,CAACc,OAA5B;AAEP,OAAO,MAAMC,WAAW,GAAGf,IAAI,CAACgB,OAAzB","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { url } from \"../lib/initial-data\";\n\nexport const fetchCity = createAsyncThunk(\"city/fetchCity\", async (city) => {\n  const response = await fetch(url(city));\n  const result = await response.json();\n  return result;\n});\n\nexport const city = createSlice({\n  name: \"city\",\n  initialState: {},\n  reducers: {\n    cityLoaded: (_, action) => action.payload,\n  },\n  extraReducers: {\n    [fetchCity.fulfilled]: (_, action) => action.payload,\n  },\n});\n\nexport const { cityLoaded } = city.actions;\n\nexport const cityReducer = city.reducer;\n"]},"metadata":{},"sourceType":"module"}